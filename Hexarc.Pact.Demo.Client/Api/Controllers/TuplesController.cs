// <auto-generated>
//   This code was generated by the Hexarc Pact tool. Do not edit.
// </auto-generated>

#nullable enable

namespace Hexarc.Pact.Demo.Api.Controllers
{
    public sealed partial class TuplesController : Hexarc.Pact.Client.ControllerBase
    {
        public TuplesController(Hexarc.Pact.Client.ClientBase client, System.String controllerPath = "/Tuples") : base(client, controllerPath)
        {
        }

        public async System.Threading.Tasks.Task<(System.Int32? x, System.Int32)?> GetTupleOfTwo(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoGetRequestWithJsonResponse<(System.Int32? x, System.Int32)?>("/GetTupleOfTwo", System.Array.Empty<Hexarc.Pact.Client.GetMethodParameter>(), headers);
        }

        public async System.Threading.Tasks.Task<(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)> GetTupleOfTen(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoGetRequestWithJsonResponse<(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)>("/GetTupleOfTen", System.Array.Empty<Hexarc.Pact.Client.GetMethodParameter>(), headers);
        }

        public async System.Threading.Tasks.Task<(System.String?, (System.Int32, (System.Int32 X, System.String?)), System.Int32)> GetTupleWithNesting(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoGetRequestWithJsonResponse<(System.String?, (System.Int32, (System.Int32 X, System.String?)), System.Int32)>("/GetTupleWithNesting", System.Array.Empty<Hexarc.Pact.Client.GetMethodParameter>(), headers);
        }

        public async System.Threading.Tasks.Task<(System.Int32 X, System.Int32 Y)> GetPoint(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoGetRequestWithJsonResponse<(System.Int32 X, System.Int32 Y)>("/GetPoint", System.Array.Empty<Hexarc.Pact.Client.GetMethodParameter>(), headers);
        }

        public async System.Threading.Tasks.Task<(System.Int32? X, System.Int32? Y)> SetPoint((System.Int32? NewX, System.Int32? NewY) point, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoPostJsonRequestWithJsonResponse<(System.Int32? NewX, System.Int32? NewY), (System.Int32? X, System.Int32? Y)>("/SetPoint", point, headers);
        }

        public async System.Threading.Tasks.Task<System.Boolean> SetTriangle(((System.Int32 X1, System.Int32 Y1) P1, (System.Int32 X2, System.Int32 Y2) P2, (System.Int32 X3, System.Int32 Y3) P3) triangle, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>? headers = default)
        {
            return await this.DoPostJsonRequestWithJsonResponse<((System.Int32 X1, System.Int32 Y1) P1, (System.Int32 X2, System.Int32 Y2) P2, (System.Int32 X3, System.Int32 Y3) P3), System.Boolean>("/SetTriangle", triangle, headers);
        }
    }
}

#nullable restore